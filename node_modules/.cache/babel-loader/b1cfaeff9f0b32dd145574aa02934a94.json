{"ast":null,"code":"import _objectSpread from \"E:\\\\React\\\\new-playlist\\\\React-Study\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"E:\\\\React\\\\new-playlist\\\\React-Study\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\React\\\\new-playlist\\\\React-Study\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\React\\\\new-playlist\\\\React-Study\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\React\\\\new-playlist\\\\React-Study\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\React\\\\new-playlist\\\\React-Study\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\React\\\\new-playlist\\\\React-Study\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nvar selectedStyle = {\n  color: '#fff'\n};\nvar fakeServerData = {\n  user: {\n    name: 'Marco',\n    playlists: [{\n      name: 'My Favorites',\n      songs: ['Death Montain', 'Eat You Alive', 'Casparroni']\n    }, {\n      name: 'Dark',\n      songs: ['Bully', 'Eater', 'Potter']\n    }, {\n      name: 'Light',\n      songs: ['Butterfly', 'In The Sky High', 'Known Person']\n    }, {\n      name: 'Random',\n      songs: ['Monkeys', 'Got Bananas', 'In The Jungle']\n    }]\n  }\n};\n\nvar Aggregate =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Aggregate, _Component);\n\n  function Aggregate() {\n    _classCallCheck(this, Aggregate);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Aggregate).apply(this, arguments));\n  }\n\n  _createClass(Aggregate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: _objectSpread({}, selectedStyle, {\n          with: \"100%\",\n          display: 'inline-block'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.playlists && this.props.playlists.length, \" Text\"));\n    }\n  }]);\n\n  return Aggregate;\n}(Component);\n\nvar Filter =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Filter, _Component2);\n\n  function Filter() {\n    _classCallCheck(this, Filter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Filter).apply(this, arguments));\n  }\n\n  _createClass(Filter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: _objectSpread({}, selectedStyle),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Filter;\n}(Component);\n\nvar PlaylistCounter =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(PlaylistCounter, _Component3);\n\n  function PlaylistCounter() {\n    _classCallCheck(this, PlaylistCounter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlaylistCounter).apply(this, arguments));\n  }\n\n  _createClass(PlaylistCounter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: _objectSpread({}, selectedStyle, {\n          display: 'inline-block',\n          width: \"25%\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Playlist Name\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Song 1\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Song 2\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Song 3\")));\n    }\n  }]);\n\n  return PlaylistCounter;\n}(Component);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(App, _Component4);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      serverData: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.serverData.user ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: _objectSpread({}, selectedStyle, {\n          'font-size': '54px'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.serverData.user.name, \" Playlist\"), React.createElement(PlaylistCount, {\n        playlists: this.state.serverData.user.playlists,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(HoursCounter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Filter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })) : React.createElement(\"h1\", {\n        style: selectedStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Loading Assets...\"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.setState({\n          serverData: fakeServerData\n        });\n      }, 3000);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n{\n  /* ---Conditions---\n  let TestVariable = 'Initialize'\n  Test &&       // the && informs that the variable before it is being tested \n  <h1>Test</h1> // If the variable is indeed true or initialized it will show the header executed in this line\n  -----------------------------------------------------------------\n  let TestVariable = 'Initialize'\n  Test ?      \n  <h1>Test</h1>:\n  <h1>Variable does not exists</h1>\n  \n  ---Funtional programing---\n  funtion(){}   // it will call the function but its not tied to the class it self\n  ()=>{}        // it will the funtion that it is tied to the class that it is defined\n  ---Sections---\n  <div> </div>\n  Exemple:\n  {variable A &&\n   <div> \n      <h1> \n       A.B\n      </h1>\n       <h2> \n       A.C\n      </h2>\n   </div>\n  }               //<div> helps incapsulate like in this exemple, otherwise we could only run just one tag\n  */\n}","map":{"version":3,"sources":["E:\\React\\new-playlist\\React-Study\\src\\App.js"],"names":["React","Component","selectedStyle","color","fakeServerData","user","name","playlists","songs","Aggregate","with","display","props","length","Filter","PlaylistCounter","width","App","state","serverData","setTimeout","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nlet selectedStyle = {\n  color: '#fff',\n};\n\nlet fakeServerData = {\n  user: \n    {\n      name:'Marco',\n      playlists: [\n        {\n          name: 'My Favorites',\n          songs: ['Death Montain', 'Eat You Alive', 'Casparroni']},\n        {\n          name: 'Dark',\n          songs: ['Bully', 'Eater', 'Potter']},\n        {\n          name: 'Light',\n          songs: ['Butterfly', 'In The Sky High', 'Known Person']\n        },\n        {\n          name: 'Random',\n          songs: ['Monkeys', 'Got Bananas', 'In The Jungle']\n        }\n      ]\n    }\n};\n\nclass Aggregate extends Component\n{\n  render()\n  {\n    return(\n      <div style={{...selectedStyle, with: \"100%\", display: 'inline-block'}}>\n        <h2>\n          {this.props.playlists && this.props.playlists.length} Text   \n        </h2>\n      </div>\n    );\n  }\n}\n\nclass Filter extends Component\n{\n  render()\n  {\n    return(\n      <div style={{...selectedStyle}}>\n        <img/>\n          <input type=\"text\"/>\n      </div>\n    );\n  }\n}\n\n\nclass PlaylistCounter extends Component\n{\n  render()\n  {\n    return(\n    <div style={{...selectedStyle,display: 'inline-block', width: \"25%\"}}>\n      <img/>\n      <h3>\n        Playlist Name\n      </h3>\n      <ul>\n        <li>\n          Song 1\n        </li>\n        <li>\n          Song 2\n        </li>\n        <li>\n          Song 3\n        </li>\n      </ul>\n    </div>);\n  }\n}\n\nclass App extends Component \n{\n  constructor()\n  {\n    super();\n    this.state = {serverData:{}}\n  }\n\n  render() \n  { \n    return (\n      <div className=\"App\">\n        {this.state.serverData.user ?\n          <div>\n            <h1 style={{...selectedStyle, 'font-size': '54px'}}>\n              { this.state.serverData.user.name} Playlist\n            </h1>\n\n            <PlaylistCount playlists = {this.state.serverData.user.playlists}/>\n            <HoursCounter/>\n\n            <Filter/>\n\n            <Playlist/>\n            <Playlist/>\n            <Playlist/>\n            <Playlist/>\n          </div>: \n          <h1 style={selectedStyle}>\n            Loading Assets...\n          </h1>\n        }\n      </div>\n    );\n  }\n\n  componentDidMount()\n  {\n    setTimeout(\n    ()=>\n    {\n      this.setState({serverData: fakeServerData})\n    },3000);\n  }\n}\n\nexport default App;\n\n{/* ---Conditions---\n\nlet TestVariable = 'Initialize'\n\nTest &&       // the && informs that the variable before it is being tested \n<h1>Test</h1> // If the variable is indeed true or initialized it will show the header executed in this line\n\n-----------------------------------------------------------------\nlet TestVariable = 'Initialize'\n\nTest ?      \n<h1>Test</h1>:\n<h1>Variable does not exists</h1>\n\n\n---Funtional programing---\n\nfuntion(){}   // it will call the function but its not tied to the class it self\n()=>{}        // it will the funtion that it is tied to the class that it is defined\n\n---Sections---\n<div> </div>\nExemple:\n{variable A &&\n  <div> \n     <h1> \n      A.B\n     </h1>\n\n     <h2> \n      A.C\n     </h2>\n  </div>\n}               //<div> helps incapsulate like in this exemple, otherwise we could only run just one tag\n\n*/}"]},"metadata":{},"sourceType":"module"}